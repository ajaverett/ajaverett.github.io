{
  "hash": "a58b4221cbe9eec460609abffa15a284",
  "result": {
    "markdown": "---\ntitle: \"Linear Algebra, Lesson 1\"\nsubtitle: \"Systems of Linear Equations to the Invertible Matrix Theorem\"\ntitle-block-banner: ../../images/banner.png\ntitle-block-banner-color: 'white'\nimage: \"matrix.webp\"\ncategories: [\"Math\", \"Linear Algebra\"]\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Show the code\"\n---\n\n:::: {.panel-tabset}\n\n# Systems of Linear Equations {.unnumbered}\n\n### Systems with a Single Solution {.unnumbered}\n\nBelow is a **linear equation**:\n\n$$\n\\begin{cases}\nx_1 - 2x_2 = -1\n\\end{cases}\n$$\n\n::: {#72297f77 .cell execution_count=1}\n``` {.python .cell-code code-fold=\"true\"}\nimport sympy as sp\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Declare variables\nx1, x2 = sp.symbols('x_1 x_2')\n\n# Define the equation\nequation_1 = sp.Eq(x1 - 2*x2, -1)\ngraph_eq1 = sp.solve(equation_1, x2)[0]\n\n# Generate data for plotting\nx1_vals = np.linspace(-10, 10, 400)\ngraph_eq1_lambdified = sp.lambdify(x1, graph_eq1)\ny1_vals = graph_eq1_lambdified(x1_vals)\n\n# Plotting\nfig, ax = plt.subplots(figsize=(7, 6))\n\n# Title and labels\nax.set_title('A single linear equation')\nax.set_xlabel('$x_1$                                                                                                                            ')\nax.set_ylabel('$x_2$                                                                                                    ')\n\n# Plot the equation\nax.plot(x1_vals, y1_vals, label='$x_1 - 2x_2 = -1$', color='blue')\n\n# Move the left and bottom spines to x = 0 and y = 0, respectively\nax.spines['left'].set_position('zero')\nax.spines['bottom'].set_position('zero')\nax.spines['right'].set_color('none')\nax.spines['top'].set_color('none')\n\n# Add legend and grid\nax.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=540 height=483 fig-align='center'}\n:::\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n\n# Definition of a linear equation\n\nA linear equation in the variables $x_1, x_2, \\ldots, x_n$ is an equation that can be written in the form\n\n$$\na_1x_1 + a_2x_2 + \\cdots + a_nx_n = b\n$$\n\nwhere $b$ and the coefficients $a_1, a_2, \\ldots, a_n$ are real or complex numbers. The subscript $n$ may be any positive integer.\n\n:::\n\n\nTake the following **system of linear equations**:\n$$\n\\begin{cases}\n&x_1 &- 2x_2 &= -1\\\\\n-&x_1 &+ 3x_2 &= 3\n\\end{cases}\n$$\n\nIf we plot these equations on a graph, we can see that they intersect at a single point. This point is the solution to the system of equations.\n\n::: {#3122fe1a .cell execution_count=2}\n``` {.python .cell-code code-fold=\"true\"}\nimport sympy as sp\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx1, x2 = sp.symbols('x_1 x_2')\n\nequation_1 = sp.Eq(x1 - 2*x2, -1)\ngraph_eq1 = sp.solve(equation_1, x2)[0]\n\nequation_2 = sp.Eq(-x1 + 3*x2, 3)\ngraph_eq2 = sp.solve(equation_2, x2)[0]\n\n# Generate data for plotting\nx1_vals = np.linspace(-10, 10, 400)\ngraph_eq1_lambdified = sp.lambdify(x1, graph_eq1)\ngraph_eq2_lambdified = sp.lambdify(x1, graph_eq2)\ny1_vals = graph_eq1_lambdified(x1_vals)\ny2_vals = graph_eq2_lambdified(x1_vals)\n\n# Plotting\nfig, ax = plt.subplots(figsize=(7, 6))\n\nax.set_title('A system of equations with a single solution')\nax.set_xlabel('$x_1$                                                                                                                            ')\nax.set_ylabel('$x_2$                                                                                                    ')\n\n# Plot the equations\nax.plot(x1_vals, y1_vals, label='$x_1 - 2x_2 = -1$', color='blue')\nax.plot(x1_vals, y2_vals, label='$-x_1 + 3x_2 = 3$', color='green')\n\n# Move the left and bottom spines to x = 0 and y = 0, respectively\nax.spines['left'].set_position('zero')\nax.spines['bottom'].set_position('zero')\nax.spines['right'].set_color('none')\nax.spines['top'].set_color('none')\n\n# Add legend and grid\nax.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=540 height=483 fig-align='center'}\n:::\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n\n# Definition of a system of linear equations\n\nA system of linear equations (or a linear system) is a collection of one or more linear equations involving the same variables- say $x_1, x_2, \\ldots, x_n$. An example is\n\n$$\n\\begin{cases}\n&x_1 &- 2x_2 &= -1\\\\\n-&x_1 &+ 3x_2 &= 3\n\\end{cases}\n$$\n\nThe above system has two equations and two variables where $x_1, x_2$ are the variables. \n\n:::\n\nThe equations above have only one solution since they intersect at a single point. \n\n::: {#bd2aed45 .cell execution_count=3}\n``` {.python .cell-code code-fold=\"true\"}\nfrom IPython.display import Markdown\n\nsolution = sp.solve((equation_1, equation_2), (x1, x2))\nMarkdown(f'$$\\n{sp.latex(solution)}\\n$$')\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n$$\n\\left\\{ x_{1} : 3, \\  x_{2} : 2\\right\\}\n$$\n:::\n:::\n\n\n::: {#b3cc7d45 .cell execution_count=4}\n``` {.python .cell-code code-fold=\"true\"}\nimport sympy as sp\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx1, x2 = sp.symbols('x_1 x_2')\n\nequation_1 = sp.Eq(x1 - 2*x2, -1)\ngraph_eq1 = sp.solve(equation_1, x2)[0]\n\nequation_2 = sp.Eq(-x1 + 3*x2, 3)\ngraph_eq2 = sp.solve(equation_2, x2)[0]\n\n# Generate data for plotting\nx1_vals = np.linspace(-10, 10, 400)\ngraph_eq1_lambdified = sp.lambdify(x1, graph_eq1)\ngraph_eq2_lambdified = sp.lambdify(x1, graph_eq2)\ny1_vals = graph_eq1_lambdified(x1_vals)\ny2_vals = graph_eq2_lambdified(x1_vals)\n\n# Plotting\nfig, ax = plt.subplots(figsize=(7, 6))\n\nax.set_title('A system of equations with a single solution')\nax.set_xlabel('$x_1$                                                                                                                            ')\nax.set_ylabel('$x_2$                                                                                                    ')\n\n# Plot the equations\nax.plot(x1_vals, y1_vals, label='$x_1 - 2x_2 = -1$', color='blue')\nax.plot(x1_vals, y2_vals, label='$-x_1 + 3x_2 = 3$', color='green')\n\n# Move the left and bottom spines to x = 0 and y = 0, respectively\nax.spines['left'].set_position('zero')\nax.spines['bottom'].set_position('zero')\nax.spines['right'].set_color('none')\nax.spines['top'].set_color('none')\n\n# Plot the solution\nsolution = sp.solve((equation_1, equation_2), (x1, x2))\nsolution_x1 = solution[x1]\nsolution_x2 = solution[x2]\n\nax.scatter([solution_x1], [solution_x2], color='red', zorder=3)  \nax.text(solution_x1+.5, solution_x2-.5, '  Solution', fontsize=12)\n\n# Add legend and grid\nax.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=540 height=483 fig-align='center'}\n:::\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n\n# Definition of a solution\n\nA solution of a linear system is a list of numbers ($s_1, s_2, \\ldots, s_n$) that makes each equation a true statement when the values $s_1, s_2, \\ldots, s_n$ are substituted for $x_1, x_2, \\ldots, x_n$, respectively. \n\nFor example, the list of numbers, $(3,2)$, is a solution of the system above because, when the values $3,2$ are substituted for $x_1, x_2$, respectively, both equations are a true statement.\n\n:::\n\nThe above list, $(3,2)$, is the solution to the system of equations because it is the only list of numbers that makes both equations true. When we substitute $3$ and $2$ for $x_1$ and $x_2$ in the first equation, both equations turn out to be true!\n\n\n$$\n\\begin{cases}\n&x_1 &- 2x_2 &= -1\\\\\n-&x_1 &+ 3x_2 &= 3\n\\end{cases}\n$$\n\nturns into \n\n$$\n\\begin{cases}\n&(3) &- 2(2) &= -1 \\;\\; &\\text{True!}\\\\\n-&(3) &+ 3(2) &= 3 \\;\\; &\\text{True!}\n\\end{cases}\n$$\n\n\n### Systems without a Single Solution {.unnumbered}\n\n##### **No Solution** {.unnumbered}\n\nTake the following system of linear equations:\n\n$$\n\\begin{cases}\n&x_1 &- 2x_2 &= -1\\\\\n-&x_1 &+ 2x_2 &= 3\n\\end{cases}\n$$\n\nIf we plot these equations on a graph, we can see that they are parallel and never intersect. This means that there is no solution to this system of equations.\n\n::: {#febeba5e .cell execution_count=5}\n``` {.python .cell-code code-fold=\"true\"}\nimport sympy as sp\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx1, x2 = sp.symbols('x_1 x_2')\n\n# Define the equations\nequation_1 = sp.Eq(x1 - 2*x2, -1)\ngraph_eq1 = sp.solve(equation_1, x2)[0]\n\nequation_2 = sp.Eq(-x1 + 2*x2, 3)\ngraph_eq2 = sp.solve(equation_2, x2)[0]\n\n# Generate data for plotting\nx1_vals = np.linspace(-10, 10, 400)\ngraph_eq1_lambdified = sp.lambdify(x1, graph_eq1)\ngraph_eq2_lambdified = sp.lambdify(x1, graph_eq2)\ny1_vals = graph_eq1_lambdified(x1_vals)\ny2_vals = graph_eq2_lambdified(x1_vals)\n\n# Plotting\nfig, ax = plt.subplots(figsize=(7, 6))\n\nax.set_title('A system of equations with no solution')\nax.set_xlabel('$x_1$                                                                                                                            ')\nax.set_ylabel('$x_2$                                                                                                    ')\n\n# Plot the equations\nax.plot(x1_vals, y1_vals, label='$x_1 - 2x_2 = -1$', color='blue')\nax.plot(x1_vals, y2_vals, label='$-x_1 + 2x_2 = 3$', color='green')\n\n# Move the left and bottom spines to x = 0 and y = 0, respectively\nax.spines['left'].set_position('zero')\nax.spines['bottom'].set_position('zero')\nax.spines['right'].set_color('none')\nax.spines['top'].set_color('none')\n\n# Add legend and grid\nax.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){width=540 height=483 fig-align='center'}\n:::\n:::\n\n\n##### **Infinite Solutions** {.unnumbered}\n\nTake the following system of linear equations:\n\n$$\n\\begin{cases}\n&x_1 &- 2x_2 &= -1\\\\\n-&x_1 &+ 2x_2 &= 1\n\\end{cases}\n$$\n\nIf we plot these equations on a graph, we can see that they are the same line. This means that there are an infinite number of solutions to this system of equations.\n\n::: {#e74333c2 .cell execution_count=6}\n``` {.python .cell-code code-fold=\"true\"}\nimport sympy as sp\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx1, x2 = sp.symbols('x_1 x_2')\n\n# Define the equations\nequation_1 = sp.Eq(x1 - 2*x2, -1)\ngraph_eq1 = sp.solve(equation_1, x2)[0]\n\nequation_2 = sp.Eq(-x1 + 2*x2, 1)\ngraph_eq2 = sp.solve(equation_2, x2)[0]\n\n# Generate data for plotting\nx1_vals = np.linspace(-10, 10, 400)\ngraph_eq1_lambdified = sp.lambdify(x1, graph_eq1)\ngraph_eq2_lambdified = sp.lambdify(x1, graph_eq2)\ny1_vals = graph_eq1_lambdified(x1_vals)\ny2_vals = graph_eq2_lambdified(x1_vals)\n\n# Plotting\nfig, ax = plt.subplots(figsize=(7, 6))\n\nax.set_title('A system of equations with infinite solutions')\nax.set_xlabel('$x_1$                                                                                                                            ')\nax.set_ylabel('$x_2$                                                                                                    ')\n\n# Plot the equations\nax.plot(x1_vals, y1_vals, label='$x_1 - 2x_2 = -1$', color='blue')\nax.plot(x1_vals, y2_vals, label='$-x_1 + 2x_2 = 1$', color='green', linestyle='dashed')\n\n# Move the left and bottom spines to x = 0 and y = 0, respectively\nax.spines['left'].set_position('zero')\nax.spines['bottom'].set_position('zero')\nax.spines['right'].set_color('none')\nax.spines['top'].set_color('none')\n\n# Add legend and grid\nax.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=540 height=483 fig-align='center'}\n:::\n:::\n\n\n::: {.callout-tip}\n\nA system of linear equations has\n\n1. no solution, or\n2. exactly one solution, or\n3. infinitely many solutions.\n\n:::\n\n\n## Matrix Notation {.unnumbered}\n\n### Converting a system of linear equations to matrix form {.unnumbered}\n\nThe essential information of a linear system can be recorded compactly in a rectangular array called a matrix.\n\nThe following system of linear equations:\n\n$$\n\\begin{cases}\n&x_1 &- 2x_2 &= -1\\\\\n-&x_1 &+ 3x_2 &= 3\n\\end{cases}\n$$\n\nThe following matrix is called the **coefficient matrix** of the system, it contains the coefficients of the variables left of the equals sign:\n\n$$\n\\begin{bmatrix}\n1 & -2\\\\\n-1 & 3\n\\end{bmatrix}\n$$\n\nThe following matrix is called the **augmented matrix** of the system, it contains the coefficients of the variables left of the equals sign and the constants right of the equals sign (separated by a vertical line):\n\n$$\n\\begin{bmatrix}\n1 & -2 &|& -1\\\\\n-1 & 3 &|& 3\n\\end{bmatrix}\n$$\n\n## Dimensions of a matrix: {.unnumbered}\n\nThe size of a matrix tells how many rows and columns it has. The augmented matrix below has 3 rows and 4 columns and is called a $3 \\times 4$ (read “3 by 4”) matrix. \n\n$$\n\\begin{bmatrix}\n&1 &2 &3 &4\\\\\n&5 &6 &7 &8\\\\\n&9 &10 &11 &12\n\\end{bmatrix}\n$$\n\nIf m and n are positive integers, an m  n matrix is a rectangular array of numbers with m rows and n columns. (The number of rows always comes first.) Matrix notation will simplify the calculations in the examples that follow\n\n::: {.callout-tip}\n\nIn matrix notation: \n\n - $m$ is the number of rows \n - $n$ is the number of columns\n\n:::\n\n\n# Row Reduction and Echelon Forms\n\nA matrix has a few different \"special\" forms. Two specific forms are the **row echelon form** and the **reduced row echelon form**. These forms are useful because they make it easy to solve systems of linear equations. Below we will build up to these forms by discussing the elements of a matrix, types of forms, and the elementary row operations that are used to reduce a matrix to these forms.\n\n## Elements of a matrix {.unnumbered}\n\nCheck out the following matrix:\n\n$$\n\\left[\\begin{array}{ccc}\n    1 & 2 & 3 & 4 \\\\\n    0 & 5 & 6 & 7 \\\\\n    0 & 0 & 0 & 8 \\\\\n    0 & 0 & 0 & 0\n\\end{array}\\right]\n\\begin{array}{c}\n    \\leftarrow R_1 \\\\\n    \\leftarrow R_2 \\\\\n    \\leftarrow R_3 \\\\\n    \\leftarrow R_4\n\\end{array}\n$$\n\n### Leading Entries {.unnumbered}\n\nThe **leading entry** of a row is the first nonzero entry in that row. For example,\n\n-   the leading entry of $R_1$ is 1,\n-   the leading entry of $R_2$ is 5,\\\n-   the leading entry of $R_3$ is 8, and\n-   $R_4$ has no leading entry.\n\n### Pivot Positions {.unnumbered}\n\nThe **pivot positions** of a matrix are the positions of the leading entries in the matrix.\n\n-   for $R_1$, the leading entry is in the first column,\n-   for $R_2$ the leading entry is in the second column,\\\n-   for $R_3$, the leading entry is in the fourth column, and\n-   $R_4$ has no leading entry- thus no pivot position.\n\n### Zero Rows {.unnumbered}\n\nA **zero row** is a row that contains only zeros. In the example above, $R_4$ is a zero row.\n\n## Row Echelon Form {.unnumbered}\n\nA matrix is in **row echelon form** if it meets the following criteria:\n\n1.  Zero rows are at the bottom of the matrix.\n2.  Each leading entry of a row is in a column to the right of the leading entry of the row above it.\n3.  All entries in a column below a leading entry are zeros.\n\nHere are some examples of matrices in row echelon form:\n\n::: panel-tabset\n:header-classes: myheader\n\n# Square\n\n$$\n\\begin{bmatrix}\n    1 & 2 & 3 \\\\\n    0 & 4 & 5 \\\\\n    0 & 0 & 6 \n\\end{bmatrix}\n$$\n\n# Tall (m \\> n)\n\n$$\n\\begin{bmatrix}\n    2 & 3 & 4 \\\\\n    0 & 1 & 5 \\\\\n    0 & 0 & 3 \\\\\n    0 & 0 & 0\n\\end{bmatrix}\n$$\n\n# Wide (m \\< n)\n\n$$\n\\begin{bmatrix}\n  1 & 2 & 3 & 4 \\\\\n  0 & 0 & 0 & 0 \\\\\n  0 & 0 & 0 & 0\n\\end{bmatrix}\n$$\n\n# General Form (sorta)\n\n$$\n\\begin{bmatrix}\n    \\square & * & * & \\dots & * \\\\\n    0 & \\square & * & \\dots & * \\\\\n    0 & 0 & \\square & \\dots & * \\\\\n    \\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n    0 & 0 & 0 & \\dots & \\square \\\\\n    0 & 0 & 0 & \\dots & 0\n\\end{bmatrix}\n$$\n\nwhere $\\square$ represents a nonzero entry, and $*$ represents any entry (possibly zero).\n:::\n\n## Reduced Row Echelon Form {.unnumbered}\n\nA matrix is in **reduced row echelon form** if it meets the following criteria:\n\n1.  It is in row echelon form.\n2.  The leading entry in each nonzero row is 1.\n3.  Each leading 1 is the only nonzero entry in its column.\n\n::: {.callout-note}\n\n# Theorem 1\n\n**Uniqueness of the Reduced Echelon Form**\n\nEach matrix is row equivalent to one and only one reduced echelon matrix\n\n:::\n\nHere are some examples of matrices in reduced row echelon form:\n\n::: panel-tabset\n:header-classes: myheader\n\n# Square\n\n$$\n\\begin{bmatrix}\n    1 & 0 & 0 \\\\\n    0 & 1 & 0 \\\\\n    0 & 0 & 1 \n\\end{bmatrix}\n$$\n\n# Tall (m \\> n)\n\n$$\n\\begin{bmatrix}\n    1 & 0 & 0 \\\\\n    0 & 1 & 0 \\\\\n    0 & 0 & 1 \\\\\n    0 & 0 & 0\n\\end{bmatrix}\n$$\n\n# Wide (m \\< n)\n\n$$\n\\begin{bmatrix}\n  1 & 0 & 0 & 1 \\\\\n  0 & 1 & 0 & 2 \\\\\n  0 & 0 & 1 & 3\n\\end{bmatrix}\n$$\n\n# General Form (sorta)\n\n$$\n\\begin{bmatrix}\n    1 & 0 & \\dots & 0 & * \\\\\n    0 & 1 & \\dots & 0 & * \\\\\n    \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n    0 & 0 & \\dots & 1 & * \\\\\n    0 & 0 & \\dots & 0 & 0\n\\end{bmatrix}\n$$\n:::\n\n## Elementary Row Operations {.unnumbered}\n\nThere are three types of elementary row operations:\n\n1.  **Swap the positions of two rows.**\n\n$$\nR_i \\leftrightarrow R_j\n$$\n\n2.  **Multiply a row by a non-zero scalar.**\n\n$$\nkR_i \\rightarrow R_i\n$$\n\n3.  **Add or subtract the multiple of one row to another row.**\n\n$$\nkR_i + R_j \\rightarrow R_j\n$$\n\n## The Row Reduction Algorithm {.unnumbered}\n\nThe **row reduction algorithm** is a method for solving systems of linear equations. It is based on the idea that if two systems of equations have the same solution, then the augmented matrices of those systems are row equivalent. This means that the two matrices can be transformed into each other by a sequence of elementary row operations. The row reduction algorithm is used to transform a matrix into row echelon form or reduced row echelon form.\n\n### The Forward Phase {.unnumbered}\n\nThe forward phase of the row reduction algorithm is used to reduce a matrix to row echelon form. The steps are as follows:\n\n1.  Write the augmented matrix of the system of equations.\n2.  Begin with the leftmost nonzero column. This is a pivot column. The pivot position is at the top. Select a nonzero entry in the pivot column as a pivot. If necessary, interchange rows to move this entry into the pivot position\n3.  Use row replacement operations to create zeros in all positions below the pivot\n4.  Assuming all the entries under the last pivot is zero, we can now ignore the row containing the pivot position and cover all rows, if any, above it. Apply steps 1-3 to the remaining submatrix. Repeat the process until there are no more nonzero rows to modify.\n\n::: panel-tabset\n# Step 1\n\nBelow is the augmented matrix of a system of equations. \n\n$$\n\\begin{bmatrix}\n    0 & 3 & -6 & 6 \\\\\n    3 & -7 & 8 & -5 \\\\\n    3 & -9 & 12 & -9\n\\end{bmatrix}\n$$\n\n# Step 2\n\nStep 2 states: *Begin with the leftmost nonzero column. This is a pivot column. The pivot position is at the top. Select a nonzero entry in the pivot column as a pivot. If necessary, interchange rows to move this entry into the pivot position.*\n\n$$\n\\begin{bmatrix}\n    \\mathbf{0} & 3 & -6 & 6 \\\\\n    \\mathbf{3} & -7 & 8 & -5 \\\\\n    \\mathbf{3} & -9 & 12 & -9\n\\end{bmatrix}\n$$\n\n\nSince the first entry in $R_1$ is a zero, we need to swap it with a row where the first entry is not a zero. We can swap $R_1$ with $R_2$ or $R_3$.\n\n$$\n\\begin{array}{c}\n     R_1 \\rightarrow \\\\\n     R_2 \\rightarrow \\\\\n     R_3 \\rightarrow \\\\\n\\end{array}\n\\left[\\begin{array}{ccc}\n    \\mathbf{0} & 3 & -6 & 6 \\\\\n    \\mathbf{3} & -7 & 8 & -5 \\\\\n    \\mathbf{3} & -9 & 12 & -9\n\\end{array}\\right]\n$$\n\nWe can do the following:\n\n$R_1 \\leftrightarrow R_2 \\;\\;\\;$ or $\\;\\;\\;R_1 \\leftrightarrow R_3$\n\nI guess, let's do $R_1 \\leftrightarrow R_2$...\n\nSince we did an elementary row operation, we need to update our matrix into a new matrix:\n\n\n$$\n\\begin{bmatrix}\n    \\mathbf{0} & 3 & -6 & 6 \\\\\n    \\mathbf{3} & -7 & 8 & -5 \\\\\n    \\mathbf{3} & -9 & 12 & -9\n\\end{bmatrix}\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\begin{bmatrix}\n    \\mathbf{3} & -7 & 8 & -5  \\\\\n    \\mathbf{0} & 3 & -6 & 6   \\\\\n    \\mathbf{3} & -9 & 12 & -9\n\\end{bmatrix}\n$$\n\n# Step 3\n\nStep 3 states: *Use row replacement operations to create zeros in all positions below the pivot.*\n\n$$\n\\begin{array}{c}\n    R_1\\rightarrow\\\\\n    R_2\\rightarrow\\\\\n    R_3\\rightarrow\\\\\n\\end{array}\n\\left[\\begin{array}{ccc}\n    \\mathbf{3} & -7 & 8 & -5  \\\\\n    \\mathbf{0} & 3 & -6 & 6   \\\\\n    \\mathbf{3} & -9 & 12 & -9\n\\end{array}\\right]\n$$\n\nThe bottom left number $3$ in $R_3$ needs fixing since it is a non-zero entry below the pivot that we're working with. We can do the elementary row operation: *Add or subtract the multiple of one row to another row* to fix this.\n$$\nkR_i + R_j \\rightarrow R_j\n$$\n\n$$\n\\text{where } k = -1, i = 1, \\text{ and } j = 3\n$$\n\n$$\n-R_1 + R_3 \\rightarrow R_2\n$$\n\nThe operation is performed as follows:\n\n\n::: columns\n::: column\n\n$$\n-R_1\n$$\n\n<br>\n\n$$\n\\begin{align*}\n    &(-1)\\left[ -3,  \\;-7, \\;\\; 8, \\;\\;\\; -5 \\right] \\\\\n\\end{align*}\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\begin{align*}\n    &\\left[ (-1)3,  \\;(-1)-7, \\;\\; (-1)8, \\;\\;\\; (-1)-5 \\right] \\\\\n\\end{align*}\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\begin{bmatrix}\n    -3, \\;\\;7, -8, \\;\\;5\n\\end{bmatrix}\n$$\n:::\n\n::: column\n$$\nR_3\n$$\n\n<br>\n\n$$\n\\begin{bmatrix}\n    3 & -9 & 12 & -9 \\\\\n\\end{bmatrix}\n$$\n\n:::\n\n:::\n\nBelow is what happens when we add the two rows together:\n\n$$\n-R_1 + R_2\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\begin{array}{cc}\n    &\\left[\\;-3,  \\;\\;\\;\\;7, \\;\\; -8, \\;\\;\\;\\; 5 \\right] \\\\\n    +\\; &\\left[ \\;\\;\\;3, \\;\\; -9, \\;\\;\\;12, \\; -9 \\right]\n\\end{array}\n$$\n\n$$\n\\rule{6cm}{0.4pt}\n$$\n\n$$\n=\\;\\;\\;\\;\\;\\begin{bmatrix}\n    \\;\\;0 & -2 & \\;\\;4 & -4 \\\\\n\\end{bmatrix}\n$$\n\nNow, $\\left[0 \\; -2 \\;\\; 4 -4 \\right]$ is the new $R_2$.\n\nNew matrix:\n\n$$\n\\begin{bmatrix}\n    3 & -9 & 12 & -9 \\\\\n    0 & 3 & -6 & 6 \\\\\n    0 & -2 & 4 & -4\n\\end{bmatrix}\n$$\n\n# Step 4\n\nStep 4 states: *Assuming all the entries under the last pivot is zero, we can now ignore the row containing the pivot position and cover all rows, if any, above it. Apply steps 1-3 to the remaining submatrix. Repeat the process until there are no more nonzero rows to modify.*\n\nBelow, we can see that all the entries under the last pivot are zero, so we can ignore the row containing the pivot position and cover all rows, if any, above it.\n\n$$\n\\begin{bmatrix}\n    \\bf{3} & -9 & 12 & -9 \\\\\n    \\bf{0} & 3 & -6 & 6 \\\\\n    \\bf{0} & 2 & 4 & 4\n\\end{bmatrix}\n$$\n\n<br><br>\n\n$$\n\\text{Since everything below the 3 is a zero,}\n$$\n\n$$\n\\begin{array}{c}\n    \\text{we can ignore the first row now} \\rightarrow \\\\\n                                \\\\\n                                \\\\\n\\end{array}\n\\begin{bmatrix}\n    \\times & \\times & \\times & \\times \\\\\n    0 & \\bf{3} & -6 & 6 \\\\\n    0 & \\bf{-2} & 4 & -4\n\\end{bmatrix}\n$$\n\nWe can now apply steps 1-3 to the remaining submatrix. Repeat the process until finished.\n\n$$\n\\begin{array}{c}\n    R_1 \\rightarrow \\\\\n    R_2 \\rightarrow \\\\\n    R_3 \\rightarrow \\\\\n\\end{array}\n\\begin{bmatrix}\n    3 & -9 & 12 & -9 \\\\\n    0 & 3 & -6 & 6 \\\\\n    0 & -2 & 4 & -4\n\\end{bmatrix}\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\frac{2}{3}R_2 + R_3 \\rightarrow R_3\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\begin{bmatrix}\n    3 & -9 & 12 & -9 \\\\\n    0 & 3 & -6 & 6 \\\\\n    0 & 0 & 0 & 0\n\\end{bmatrix}\n$$\n\n# Finish\n\nWe can now see that the matrix is in row echelon form. \n\n$$\n\\begin{bmatrix}\n    3 & -9 & 12 & -9 \\\\\n    0 & 3 & -6 & 6 \\\\\n    0 & 0 & 0 & 0\n\\end{bmatrix}\n$$\n\nIf we were to solve this with python, we would do the following:\n\n::: {#aca849f4 .cell execution_count=7}\n``` {.python .cell-code}\nimport sympy as sp  \nfrom sympy import init_printing\ninit_printing()\n\nA = sp.Matrix([\n    [0,  3,  -6,   6], \n    [3, -7,   8,  -5], \n    [3, -9,  12,  -9]])\n\nA.echelon_form()\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n$\\displaystyle \\left[\\begin{matrix}3 & -7 & 8 & -5\\\\0 & 3 & -6 & 6\\\\0 & 0 & 0 & 0\\end{matrix}\\right]$\n:::\n:::\n\n\n*Note that depending on step 2, we could have swapped $R_1$ with $R_3$ instead of $R_1$ with $R_2$. This would have resulted in a different matrix*\n\n\n:::\n\n### The Backwards Phase {.unnumbered}\n\nThe backwards phase of the row reduction algorithm is used to reduce a matrix in row echelon form to reduced row echelon form. The **reduced row echelon form** of a matrix is unique. This means that there is only one reduced row echelon form for a given matrix. This is not true for row echelon form. A matrix can have many different row echelon forms. The steps are as follows:\n\n5.  Beginning with the rightmost pivot and working upward and to the left, create zeros above each pivot. If a pivot is not 1, make it 1 by a scaling operation.\n\n\n::: panel-tabset\n\n# Step 5a\n\nStep five says: *Beginning with the rightmost pivot and working upward and to the left, create zeros above each pivot. If a pivot is not 1, make it 1 by a scaling operation.*\n\nBelow is the matrix from the previous example in row echelon form. Currently the only pivots are 3 and 3. We can make the rightmost pivot 1 by dividing the row by 3.\n\n$$\n\\begin{bmatrix}\n    \\bf{3} & -9 & 12 & -9 \\\\\n    0 & \\bf{3} & -6 & 6 \\\\\n    0 & 0 & 0 & 0\n\\end{bmatrix}\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\frac{1}{3}R_2 \\rightarrow R_2\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\begin{bmatrix}\n    \\bf{3} & -9 & 12 & -9 \\\\\n    0 & \\bf{1} & -2 & 2 \\\\\n    0 & 0 & 0 & 0\n\\end{bmatrix}\n$$\n\n# Step 5b\n\nFor the right most pivot, we can make the entries above it zero with elementary row operations.\n\n$$\n\\begin{bmatrix}\n    3 & -9 & 12 & -9 \\\\\n    0 & \\bf{1} & -2 & 2 \\\\\n    0 & 0 & 0 & 0\n\\end{bmatrix}\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n9R_2 + R_1 \\rightarrow R_1\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\begin{bmatrix}\n    3 & 0 & -6 & 9 \\\\\n    0 & \\bf{1} & -2 & 2 \\\\\n    0 & 0 & 0 & 0\n\\end{bmatrix}\n$$\n\n# Step 5c\n\nNow we can make the leftmost pivot 1 by dividing the row by 3.\n\n$$\n\\begin{bmatrix}\n    3 & 0 & -6 & 9 \\\\\n    0 & \\bf{1} & -2 & 2 \\\\\n    0 & 0 & 0 & 0\n\\end{bmatrix}\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\frac{1}{3}R_1 \\rightarrow R_1\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\begin{bmatrix}\n    1 & 0 & -2 & 3 \\\\\n    0 & 1 & -2 & 2 \\\\\n    0 & 0 & 0 & 0\n\\end{bmatrix}\n$$\n\n# Finish\n\nWe can now see that the matrix is in reduced row echelon form.\n\n$$\n\\begin{bmatrix}\n    1 & 0 & -2 & 3 \\\\\n    0 & 1 & -2 & 2 \\\\\n    0 & 0 & 0 & 0\n\\end{bmatrix}\n$$\n\nAlternatively, we can solve this with python:\n\n::: {#b715c7f3 .cell execution_count=8}\n``` {.python .cell-code}\nimport sympy as sp  \nfrom sympy import init_printing\ninit_printing()\n\nA = sp.Matrix([\n    [0,  3,  -6,   6], \n    [3, -7,   8,  -5], \n    [3, -9,  12,  -9]])\n\nA.rref()[0]\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n$\\displaystyle \\left[\\begin{matrix}1 & 0 & -2 & 3\\\\0 & 1 & -2 & 2\\\\0 & 0 & 0 & 0\\end{matrix}\\right]$\n:::\n:::\n\n\n::: {#b9d5f2e1 .cell execution_count=9}\n``` {.python .cell-code}\nimport sympy as sp  \nfrom sympy import init_printing\ninit_printing()\n\nA = sp.Matrix([\n    [3, -9,  12,  -9], \n    [0,  3,  -6,   6],\n    [0,  0,   0,   0]])\n\nA.rref()[0]\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n$\\displaystyle \\left[\\begin{matrix}1 & 0 & -2 & 3\\\\0 & 1 & -2 & 2\\\\0 & 0 & 0 & 0\\end{matrix}\\right]$\n:::\n:::\n\n\n:::\n \n# Solving Linear Systems\n\n\n## The workflow for solving a linear system {.unnumbered}\n\n1.  The linear system is written out in a system of equations.\n2.  Convert the system of equations to an augmented matrix.\n3.  Use elementary row operations to reduce the matrix to row echelon form.\n4.  Convert the reduced row echelon form back to a system of equations.\n\n\n### Infinitely Many Solutions Example {.unnumbered}\n\n::: panel-tabset\n\n# Step 1\n\n1.  The linear system is written out in a system of equations.\n\nHere is a linear system written as a system of equations.\n\n$$\n\\begin{cases}\n&\\;\\;x_1 &- &3x_2 &+ &4x_3 &= -4 \\\\\n&3x_1 &- &7x_2 &+ &7x_3 &= -8 \\\\\n&2x_1 &- &6x_2 &- &8x_3 &= -8\n\\end{cases}\n$$\n\n# Step 2\n\n2.  Convert the system of equations to an augmented matrix.\n\nThe system of equations is converted to an augmented matrix.\n\n$$\n\\begin{cases}\n&\\;\\;x_1 &- &3x_2 &+ &4x_3 &= -4 \\\\\n&3x_1 &- &7x_2 &+ &7x_3 &= -8 \\\\\n&2x_1 &- &6x_2 &- &8x_3 &= -8\n\\end{cases}\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\left[\\begin{array}{ccc|c}\n1 & -3 & 4 & -4 \\\\\n3 & -7 & 7 & -8 \\\\\n2 & -6 & -8 & -8\n\\end{array}\\right]\n$$\n\n# Step 3\n\n3.  Use elementary row operations to reduce the matrix to row echelon form.\n\n$$\n\\left[\\begin{array}{ccc|c}\n1 & -3 & 4 & -4 \\\\\n3 & -7 & 7 & -8 \\\\\n2 & -6 & -8 & -8\n\\end{array}\\right]\n$$\n\n$$\n\\downarrow\n$$\n\n::: {#17a6bdcc .cell execution_count=10}\n``` {.python .cell-code}\nimport sympy as sp\nfrom sympy import init_printing\ninit_printing()\n\nA = sp.Matrix([\n    [1, -3, 4, -4],\n    [3, -7, 7, -8],\n    [2, -6, 8, -8]\n])\n\nA.echelon_form()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n$\\displaystyle \\left[\\begin{matrix}1 & -3 & 4 & -4\\\\0 & 2 & -5 & 4\\\\0 & 0 & 0 & 0\\end{matrix}\\right]$\n:::\n:::\n\n\n# Step 4\n\n4.  Convert the reduced row echelon form back to a system of equations.\n\n$$\n\\displaystyle \\left[\\begin{matrix}1 & -3 & 4 & -4\\\\0 & 2 & -5 & 4\\\\0 & 0 & 0 & 0\\end{matrix}\\right]\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\begin{cases}\nx_1 &- &3x_2 &+ &4x_3 &= -4 \\\\\n& &\\;\\;2x_2 &- &5x_3 &= \\;\\;\\;4 \\\\\n& & & &0x_3 &= \\;\\;\\;0\n\\end{cases}\n$$\n\n# Finish\n\nThe system of equations is written out as so:\n\n$$\n\\begin{cases}\nx_1 &- &3x_2 &+ &4x_3 &= -4 \\\\\n& &2x_2 &- &5x_3 &= \\;\\;\\;4 \\\\\n& & & &0x_3 &= \\;\\;\\;0\n\\end{cases}\n$$\n\nWe can see that the system is consistent because the last equation is $0x_3 = 0$ which is always true. Therefore, the system has infinitely many solutions.\n\n:::\n\n### No Solution Example {.unnumbered}\n\n::: panel-tabset\n\n# Step 1\n\n1.  The linear system is written out in a system of equations.\n\nHere is a linear system written as a system of equations.\n\n$$\n\\begin{cases}\n& & &\\;\\;x_2 &+ &4x_3 &= -5 \\\\\n&\\;\\;x_1 &- &3x_2 &+ &5x_3 &= -2 \\\\\n&3x_1 &+ &7x_2 &+ &7x_3 &= \\;\\;\\;6\n\\end{cases}\n$$\n\n# Step 2\n\n2.  Convert the system of equations to an augmented matrix.\n\nThe system of equations is converted to an augmented matrix.\n\n$$\n\\begin{cases}\n& & &\\;\\;x_2 &+ &4x_3 &= -5 \\\\\n&\\;\\;x_1 &- &3x_2 &+ &5x_3 &= -2 \\\\\n&3x_1 &+ &7x_2 &+ &7x_3 &= \\;\\;\\;6\n\\end{cases}\n$$\n\n$$\n\\downarrow\n$$\n\n$$\n\\left[\\begin{array}{ccc|c}\n0 & 1 & 4 & -5 \\\\\n1 & 3 & 5 & -2 \\\\\n3 & 7 & 7 & 6\n\\end{array}\\right]\n$$\n\n# Step 3\n\n3.  Use elementary row operations to reduce the matrix to row echelon form.\n\n\n$$\n\\left[\\begin{array}{ccc|c}\n0 & 1 & 4 & -5 \\\\\n1 & 3 & 5 & -2 \\\\\n3 & 7 & 7 & 6\n\\end{array}\\right]\n$$\n\n$$\n\\downarrow\n$$\n\n::: {#7f81e1e3 .cell execution_count=11}\n``` {.python .cell-code}\nimport sympy as sp  \nfrom sympy import init_printing\ninit_printing()\n\nA = sp.Matrix([\n    [0, 1, 4, -5],\n    [1, 3, 5, -2],\n    [3, 7, 7, 6]\n])\n\nA.echelon_form()\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n$\\displaystyle \\left[\\begin{matrix}1 & 3 & 5 & -2\\\\0 & 1 & 4 & -5\\\\0 & 0 & 0 & 2\\end{matrix}\\right]$\n:::\n:::\n\n\n# Step 4\n\n4.  Convert the reduced row echelon form back to a system of equations.\n\n$$\n\\displaystyle \\left[\\begin{matrix}1 & 3 & 5 & -2\\\\0 & 1 & 4 & -5\\\\0 & 0 & 0 & 2\\end{matrix}\\right]\n$$\n\n$$  \n\\downarrow\n$$\n\n$$\n\\begin{cases}\nx_1 &+ &3x_2 &+ &5x_3 &= -2 \\\\\n& &\\;\\;x_2 &+ &4x_3 &= -5 \\\\\n& & & &0x_3 &= \\;\\;\\;2\n\\end{cases}\n$$\n\n# Finish\n\nThe system of equations is written out as so:\n\n$$\n\\begin{cases}\nx_1 &+ &3x_2 &+ &5x_3 &= -2 \\\\\n& &\\;\\;x_2 &+ &4x_3 &= -5 \\\\\n& & & &0x_3 &= \\;\\;\\;2\n\\end{cases}\n$$\n\nWe can see that the system is inconsistent because the last equation is $0x_3 = 2$ which is impossible. No value of $x_3$ will make this equation true. Therefore, the system has no solution.\n\n:::\n\n\n\n## Existence and Uniqueness Question {.unnumbered}\n\n\nThe two fundamental questions about a linear system are:\n\n1. Is the system consistent; that is, does at least one solution exist?\n2. If a solution exists, is it the only one; that is, is the solution unique\n\n\n**Examples from [Linear Systems (page 1)](/p1.html)** \n\nA consistent system that has a unique solution\n\n$$\n\\left[\\begin{array}{cc|c}\n1 & -2 & -1 \\\\\n-1 & 3 & 3\n\\end{array}\\right]\n$$\n\n$$\n\\text{or}\n$$\n\n$$\n\\begin{cases}\n&\\;\\;\\;x_1 &- &2x_2 &= -1 \\\\\n&-x_1 &+ &3x_2 &= \\;\\;\\;3\n\\end{cases}\n$$\n\nA consistent system that has infinitely many solutions\n\n$$\n\\left[\\begin{array}{cc|c}\n1 & -2 & -1 \\\\\n-1 & 2 & 1\n\\end{array}\\right]  \n$$\n\n$$\n\\text{or}\n$$\n\n$$\n\\begin{cases}\n&\\;\\;\\;x_1 &- &2x_2 &= -1 \\\\\n&-x_1 &+ &2x_2 &= \\;\\;\\;1\n\\end{cases}\n$$\n\n\nAn inconsistent system (A system that has no solution)\n\n$$\n\\left[\\begin{array}{cc|c}\n1 & -2 & -1 \\\\\n-1 & 2 & 3\n\\end{array}\\right]\n$$\n\n$$\n\\text{or}\n$$\n\n$$\n\\begin{cases}\n&\\;\\;\\;x_1 &- &2x_2 &= -1 \\\\\n&-x_1 &+ &2x_2 &= \\;\\;\\;3\n\\end{cases}\n$$\n\n::: {.callout-note}\n\n# Theorem 2 \n\n**Existence and Uniqueness Theorem**\n\nA linear system is consistent if and only if the rightmost column of the augmented matrix is not a pivot column—that is, if and only if an echelon form of the\naugmented matrix has no row of the form\n\n$$\n\\left[\\begin{array}{cccc|c}\n0 & \\cdots & 0 & 0 & b\n\\end{array}\\right]\n\\;\\;\\;\\;\\;\\;\\;\\text{where } b \\neq 0\n$$\n\nIf a linear system is consistent, then the solution set contains either (i) a unique solution, when there are no free variables, or (ii) infinitely many solutions, when there is at least one free variable.  \n\n:::\n\n# Vectors\n\n## A framework for thinking about vectors {.unnumbered}\n\n**One dimension**\n\nImagine a number line. A point on the number line is a number. This number line is in one dimensional space.\n\n::: {#7b3c4ea6 .cell execution_count=12}\n``` {.python .cell-code code-fold=\"true\"}\nimport plotly.graph_objects as go\n\nx_values = list(range(-100, 101))\n\nfig = go.Figure()\n\n(fig.add_trace(\n    go.Scatter(\n        x=x_values,\n        y=[0] * len(x_values),\n        mode=\"markers+text\",\n        marker=dict(size=8, color='red'),\n        text=x_values,\n        textposition=\"bottom center\"))\n    .add_shape(\n    go.layout.Shape(\n        type=\"line\",\n        x0=min(x_values),\n        x1=max(x_values),\n        y0=0,\n        y1=0,\n        line=dict(\n            color=\"Black\",\n            width=3)))\n    .update_xaxes(\n        tickvals=[],\n        showline=True,\n        linewidth=2,\n        linecolor='black',\n        showgrid=False,\n        zeroline=False,\n        ticks=\"\",\n        range=[-10, 10])\n    .update_yaxes(\n        tickvals=[],\n        showline=False,\n        showgrid=False,\n        zeroline=False,\n        ticks=\"\")\n    .update_layout(\n        showlegend=False,\n        plot_bgcolor='rgba(0,0,0,0)',\n        paper_bgcolor='rgba(0,0,0,0)',\n        yaxis_title=\"\",\n        height=250,  # Set the height of the plot\n        annotations=[\n            dict(\n                x=0,\n                y=-0.2,\n                xref=\"x\",\n                yref=\"y\",\n                text=\"drag me left and right ⬇️ (x_1)\",  # Custom text for the x-axis\n                showarrow=False)])\n\n)\n\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"f95ae58b-d46e-467b-b72f-ccf6571c1674\" class=\"plotly-graph-div\" style=\"height:250px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"f95ae58b-d46e-467b-b72f-ccf6571c1674\")) {                    Plotly.newPlot(                        \"f95ae58b-d46e-467b-b72f-ccf6571c1674\",                        [{\"marker\":{\"color\":\"red\",\"size\":8},\"mode\":\"markers+text\",\"text\":[\"-100\",\"-99\",\"-98\",\"-97\",\"-96\",\"-95\",\"-94\",\"-93\",\"-92\",\"-91\",\"-90\",\"-89\",\"-88\",\"-87\",\"-86\",\"-85\",\"-84\",\"-83\",\"-82\",\"-81\",\"-80\",\"-79\",\"-78\",\"-77\",\"-76\",\"-75\",\"-74\",\"-73\",\"-72\",\"-71\",\"-70\",\"-69\",\"-68\",\"-67\",\"-66\",\"-65\",\"-64\",\"-63\",\"-62\",\"-61\",\"-60\",\"-59\",\"-58\",\"-57\",\"-56\",\"-55\",\"-54\",\"-53\",\"-52\",\"-51\",\"-50\",\"-49\",\"-48\",\"-47\",\"-46\",\"-45\",\"-44\",\"-43\",\"-42\",\"-41\",\"-40\",\"-39\",\"-38\",\"-37\",\"-36\",\"-35\",\"-34\",\"-33\",\"-32\",\"-31\",\"-30\",\"-29\",\"-28\",\"-27\",\"-26\",\"-25\",\"-24\",\"-23\",\"-22\",\"-21\",\"-20\",\"-19\",\"-18\",\"-17\",\"-16\",\"-15\",\"-14\",\"-13\",\"-12\",\"-11\",\"-10\",\"-9\",\"-8\",\"-7\",\"-6\",\"-5\",\"-4\",\"-3\",\"-2\",\"-1\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\"],\"textposition\":\"bottom center\",\"x\":[-100,-99,-98,-97,-96,-95,-94,-93,-92,-91,-90,-89,-88,-87,-86,-85,-84,-83,-82,-81,-80,-79,-78,-77,-76,-75,-74,-73,-72,-71,-70,-69,-68,-67,-66,-65,-64,-63,-62,-61,-60,-59,-58,-57,-56,-55,-54,-53,-52,-51,-50,-49,-48,-47,-46,-45,-44,-43,-42,-41,-40,-39,-38,-37,-36,-35,-34,-33,-32,-31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-21,-20,-19,-18,-17,-16,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],\"y\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"Black\",\"width\":3},\"type\":\"line\",\"x0\":-100,\"x1\":100,\"y0\":0,\"y1\":0}],\"xaxis\":{\"tickvals\":[],\"showline\":true,\"linewidth\":2,\"linecolor\":\"black\",\"showgrid\":false,\"zeroline\":false,\"ticks\":\"\",\"range\":[-10,10]},\"yaxis\":{\"tickvals\":[],\"showline\":false,\"showgrid\":false,\"zeroline\":false,\"ticks\":\"\",\"title\":{\"text\":\"\"}},\"showlegend\":false,\"plot_bgcolor\":\"rgba(0,0,0,0)\",\"paper_bgcolor\":\"rgba(0,0,0,0)\",\"height\":250,\"annotations\":[{\"showarrow\":false,\"text\":\"drag me left and right \\u2b07\\ufe0f (x_1)\",\"x\":0,\"xref\":\"x\",\"y\":-0.2,\"yref\":\"y\"}]},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('f95ae58b-d46e-467b-b72f-ccf6571c1674');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\nA point in a 1 dimensional space is represented by a single number. The number specifies the location of the point along the ($x_1$) axis. In other words, there is only one direction in which the point can move (left and right).\n\nExample: $1$\n\n**Two dimension**\n\n::: {#234cf1e2 .cell execution_count=13}\n``` {.python .cell-code code-fold=\"true\"}\nimport plotly.express as px\nimport pandas as pd\n\n# Create an empty DataFrame\ndf = pd.DataFrame({'drag me ($x_1$)': [], 'drag me ($x_2$)': []})\n\n# Create the scatter plot\nfig =(px\n    .scatter(df, x='drag me ($x_1$)', y='drag me ($x_1$)')\n    .update_xaxes(range=[-30, 30], \n                 zeroline=True, \n                 zerolinewidth=2, \n                 zerolinecolor='Black', \n                 tickvals=list(range(-100, 101, 10)))\n    .update_yaxes(range=[-30, 30], \n                 zeroline=True, \n                 zerolinewidth=2, \n                 zerolinecolor='Black', \n                 tickvals=list(range(-100, 101, 10))))\n\nfig.show()\n\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"6aeaa583-2ba0-4959-a8de-bb07469cdcb1\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"6aeaa583-2ba0-4959-a8de-bb07469cdcb1\")) {                    Plotly.newPlot(                        \"6aeaa583-2ba0-4959-a8de-bb07469cdcb1\",                        [{\"hovertemplate\":\"drag me ($x_1$)=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[],\"xaxis\":\"x\",\"y\":[],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"drag me ($x_1$)\"},\"range\":[-30,30],\"zeroline\":true,\"zerolinewidth\":2,\"zerolinecolor\":\"Black\",\"tickvals\":[-100,-90,-80,-70,-60,-50,-40,-30,-20,-10,0,10,20,30,40,50,60,70,80,90,100]},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"drag me ($x_1$)\"},\"range\":[-30,30],\"zeroline\":true,\"zerolinewidth\":2,\"zerolinecolor\":\"Black\",\"tickvals\":[-100,-90,-80,-70,-60,-50,-40,-30,-20,-10,0,10,20,30,40,50,60,70,80,90,100]},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('6aeaa583-2ba0-4959-a8de-bb07469cdcb1');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\nA point in a 2 dimensional space is represented by two numbers. The first number specifies the location of the point along the first, $x_1$, axis and the second number specifies the location of the point along the second, $x_2$, axis. In other words, there are two independent directions in which the point can move (left and right, up and down).\n\nExample: $\\begin{bmatrix}1\\\\2\\end{bmatrix}$\n\n**Three dimension**\n\n::: {#689f923f .cell execution_count=14}\n``` {.python .cell-code code-fold=\"true\"}\nimport pandas as pd\nimport plotly.express as px\n\nx_values = [i for i in range(-100, 101)]\ny_values = [i for i in range(-100, 101)]\nz_values = [i for i in range(-100, 101)]\n\ndf_x = pd.DataFrame({'x1': x_values, 'x2': [0]*len(x_values), 'x3': [0]*len(x_values)})\ndf_y = pd.DataFrame({'x1': [0]*len(y_values), 'x2': y_values, 'x3': [0]*len(y_values)})\ndf_z = pd.DataFrame({'x1': [0]*len(z_values), 'x2': [0]*len(z_values), 'x3': z_values})\n\ndf = pd.concat([df_x, df_y, df_z], ignore_index=True)\n\nfig = px.scatter_3d(df, x='x1', y='x2', z='x3')\n\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"4c43bee0-581d-4b3b-b3ae-4d93ef0f5bdc\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"4c43bee0-581d-4b3b-b3ae-4d93ef0f5bdc\")) {                    Plotly.newPlot(                        \"4c43bee0-581d-4b3b-b3ae-4d93ef0f5bdc\",                        [{\"hovertemplate\":\"x1=%{x}\\u003cbr\\u003ex2=%{y}\\u003cbr\\u003ex3=%{z}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"scene\":\"scene\",\"showlegend\":false,\"x\":[-100,-99,-98,-97,-96,-95,-94,-93,-92,-91,-90,-89,-88,-87,-86,-85,-84,-83,-82,-81,-80,-79,-78,-77,-76,-75,-74,-73,-72,-71,-70,-69,-68,-67,-66,-65,-64,-63,-62,-61,-60,-59,-58,-57,-56,-55,-54,-53,-52,-51,-50,-49,-48,-47,-46,-45,-44,-43,-42,-41,-40,-39,-38,-37,-36,-35,-34,-33,-32,-31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-21,-20,-19,-18,-17,-16,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"y\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-100,-99,-98,-97,-96,-95,-94,-93,-92,-91,-90,-89,-88,-87,-86,-85,-84,-83,-82,-81,-80,-79,-78,-77,-76,-75,-74,-73,-72,-71,-70,-69,-68,-67,-66,-65,-64,-63,-62,-61,-60,-59,-58,-57,-56,-55,-54,-53,-52,-51,-50,-49,-48,-47,-46,-45,-44,-43,-42,-41,-40,-39,-38,-37,-36,-35,-34,-33,-32,-31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-21,-20,-19,-18,-17,-16,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"z\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-100,-99,-98,-97,-96,-95,-94,-93,-92,-91,-90,-89,-88,-87,-86,-85,-84,-83,-82,-81,-80,-79,-78,-77,-76,-75,-74,-73,-72,-71,-70,-69,-68,-67,-66,-65,-64,-63,-62,-61,-60,-59,-58,-57,-56,-55,-54,-53,-52,-51,-50,-49,-48,-47,-46,-45,-44,-43,-42,-41,-40,-39,-38,-37,-36,-35,-34,-33,-32,-31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-21,-20,-19,-18,-17,-16,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],\"type\":\"scatter3d\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"scene\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"xaxis\":{\"title\":{\"text\":\"x1\"}},\"yaxis\":{\"title\":{\"text\":\"x2\"}},\"zaxis\":{\"title\":{\"text\":\"x3\"}}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('4c43bee0-581d-4b3b-b3ae-4d93ef0f5bdc');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\nA point in a 3 dimensional space is represented by three numbers. The first number specifies the location of the point along the first, $x_1$, axis, the second number specifies the location of the point along the second, $x_2$, axis, and the third number specifies the location of the point along the third, $x_3$, axis. In other words, there are three independent directions in which the point can move (left and right, up and down, in and out). \n\nExample: $\\begin{bmatrix}1\\\\2\\\\3\\end{bmatrix}$\n\n\n## Vectors in $\\mathbb{R}^2$ {.unnumbered}\n\nA matrix with only one column is called a column vector, or simply a vector. Examples of vectors with two entries are\n\n$$\n\\bf{u} = \n\\begin{bmatrix}\n1 \\\\\n2\n\\end{bmatrix}\n;\n\\quad\n\\bf{v} = \n\\begin{bmatrix}\n-1 \\\\\n0\n\\end{bmatrix}\n;\n\\quad\n\\bf{w} = \n\\begin{bmatrix}\nw_1 \\\\\nw_2\n\\end{bmatrix}\n$$\n\nThe set of all vectors with two entries is denoted by $\\mathbb{R}^2$. The set of all vectors with three entries is denoted by $\\mathbb{R}^3$. In general, the set of all vectors with $n$ entries is denoted by $\\mathbb{R}^n$.\n\n\n{{< video https://www.youtube.com/watch?v=fNk_zzaMoSs&list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab title='What are vectors?' >}} \n\n\n\n## Operations with vectors {.unnumbered}\n\n**Equalities**\n\nTwo vectors $\\bf{u}$ and $\\bf{v}$ in $\\mathbb{R}^2$ are equal if and only if $u_1 = v_1$ and $u_2 = v_2$. In other words, two vectors are equal if and only if their corresponding entries are equal.\n\nFor example:\n\n$$\n\\begin{bmatrix}\n1 \\\\\n2\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n1 \\\\\n2\n\\end{bmatrix}\n$$\n\n$$\n\\begin{bmatrix}\n1 \\\\\n2\n\\end{bmatrix}\n\\neq\n\\begin{bmatrix}\n2 \\\\\n1\n\\end{bmatrix}\n$$\n\n**Addition**\n\nGiven two vectors $\\bf{u}$ and $\\bf{v}$ in $\\mathbb{R}^2$, their sum $\\bf{u} + \\bf{v}$ is obtained by adding their corresponding entries:\n\n$$\n\\begin{bmatrix}\nu_1 \\\\\nu_2\n\\end{bmatrix}\n+\n\\begin{bmatrix}\nv_1 \\\\\nv_2\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nu_1 + v_1 \\\\\nu_2 + v_2\n\\end{bmatrix}\n$$\n\n\n**Scalar multiplication**\n\nGiven a vector $\\bf{u}$ in $\\mathbb{R}^2$ and a scalar $c$, their product $c\\bf{u}$ is obtained by multiplying each entry of $\\bf{u}$ by $c$:\n\n$$\nc\n\\begin{bmatrix}\nu_1 \\\\\nu_2\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ncu_1 \\\\\ncu_2\n\\end{bmatrix}\n$$\n\n\n\n# Linear Combinations and Span\n\n\n{{< video https://www.youtube.com/watch?v=k7RM-ot2NWY title='What are vectors?' >}} \n\n\n\n## Linear Combinations\n\nA **linear combination** is a sum of scalar multiples of vectors. The scalars are called the weights.\n\nGiven vectors $\\mathbf{v}_1, \\mathbf{v}_2, ..., \\mathbf{v}_p$ in $\\mathbb{R}^n$ and weights (scalars) $c_1, c_2, ..., c_p$, the vector, $\\mathbf{y}$, is a linear combination of $\\mathbf{v}_1, \\mathbf{v}_2, ..., \\mathbf{v}_p$ if:\n\n$$\n\\mathbf{y} = c_1\\mathbf{v}_1 + c_2\\mathbf{v}_2 + ... + c_p\\mathbf{v}_p\n$$\n\nEach weight (scalar) $c_i$ scales the vector $\\mathbf{v}_i$, and the sum of all these scaled vectors is the resulting linear combination.\n\n\n### Example\n\nImagine vectors, $\\mathbf{v}_1$ and $\\mathbf{v}_2$, in $\\mathbb{R}^2$ where $\\mathbf{v}_1 = \\begin{bmatrix}-1\\\\2\\end{bmatrix}$ and $\\mathbf{v}_2 = \\begin{bmatrix}2\\\\0\\end{bmatrix}$. \n\nNow, imagine vector, $\\mathbf{y}$, in $\\mathbb{R}^2$ where $\\mathbf{y} = \\begin{bmatrix}2\\\\2\\end{bmatrix}$.\n\nWe can see that $\\mathbf{y}$ is a linear combination of $\\mathbf{v}_1$ and $\\mathbf{v}_2$ because $\\mathbf{y}$ can be written as:\n\n$$\n(1)\\mathbf{v}_1 + (1.5)\\mathbf{v}_2 = \\mathbf{y} = \n$$\n\nor, in other words:\n\n$$\n(1)\\begin{bmatrix}-1\\\\2\\end{bmatrix} + (1.5)\\begin{bmatrix}2\\\\0\\end{bmatrix} = \\begin{bmatrix}2\\\\2\\end{bmatrix} \n$$\n\n\n\n\n```{=html}\n<iframe src=\"https://www.geogebra.org/classic/watmgddv?embed\" width=\"700\" height=\"500\" allowfullscreen style=\"border: 1px solid #e4e4e4;border-radius: 4px;\" frameborder=\"0\"></iframe>\n```\n\n\n\n\n::: {.callout-note}\nA vector equation\n\n$$\nx_1\\mathbf{a}_1 + x_2\\mathbf{a}_2 + \\ldots + x_n\\mathbf{a}_n = \\mathbf{b}\n$$\n\nhas the same solution set as the linear system whose augmented matrix is\n\n$$\n\\begin{bmatrix}\n\\mathbf{a}_1 & \\mathbf{a}_2 & \\ldots & \\mathbf{a}_n & \\mathbf{b}\n\\end{bmatrix}\n$$\n\nIn particular, $\\mathbf{b}$ can be generated by a linear combination of $\\mathbf{a}_1, \\ldots, \\mathbf{a}_n$ if and only if there exists a solution to the linear system corresponding to the matrix (5).\n\nOne of the key ideas in linear algebra is to study the set of all vectors that can be generated or written as a linear combination of a fixed set $\\{\\mathbf{v}_1, \\ldots, \\mathbf{v}_p\\}$ of vectors.\n\nIf $\\mathbf{v}_1, \\ldots, \\mathbf{v}_p$ are in $\\mathbb{R}^n$, then the set of all linear combinations of $\\mathbf{v}_1, \\ldots, \\mathbf{v}_p$ is denoted by $\\text{Span}\\{\\mathbf{v}_1, \\ldots, \\mathbf{v}_p\\}$ and is called the subset of $\\mathbb{R}^n$ spanned (or generated) by $\\mathbf{v}_1, \\ldots, \\mathbf{v}_p$. That is, $\\text{Span}\\{\\mathbf{v}_1, \\ldots, \\mathbf{v}_p\\}$ is the collection of all vectors that can be written in the form\n\n$$\nc_1\\mathbf{v}_1 + c_2\\mathbf{v}_2 + \\ldots + c_p\\mathbf{v}_p\n$$\n\nwith $c_1, \\ldots, c_p$ scalars.\n\nAsking whether a vector $\\mathbf{b}$ is in $\\text{Span}\\{\\mathbf{v}_1, \\ldots, \\mathbf{v}_p\\}$ amounts to asking whether the vector equation\n\n$$\nx_1\\mathbf{v}_1 + x_2\\mathbf{v}_2 + \\ldots + x_p\\mathbf{v}_p = \\mathbf{b}\n$$\n\nhas a solution, or, equivalently, asking whether the linear system with augmented matrix\n\n$$\n\\begin{bmatrix}\n\\mathbf{v}_1 & \\ldots & \\mathbf{v}_p & \\mathbf{b}\n\\end{bmatrix}\n$$\n\nhas a solution.\n\n:::\n\n\n\n\n## Span of Vectors\n\nThe **span** of a set of vectors is the collection of all possible linear combinations of those vectors. It represents all the vectors that can be reached or generated by scaling and combining the original set of vectors.\n\nCheck out [this](https://www.geogebra.org/m/sZvguX3J) interactive graph to see how the span of vectors changes as the vectors are scaled and combined.\n\n\n### Definition\n\nThe span of vectors $\\mathbf{v}_1, \\mathbf{v}_2, ..., \\mathbf{v}_n$ is denoted as $\\text{Span}\\{\\mathbf{v}_1, \\mathbf{v}_2, \\dots, \\mathbf{v}_n\\}$ and includes every vector that can be written in the form:\n\n$$\na_1\\mathbf{v}_1 + a_2\\mathbf{v}_2 + ... + a_n\\mathbf{v}_n\n$$\n\nwhere $a_1, a_2, ..., a_n$ are real numbers.\n\n### Example\n\n\n\n\nConsider vectors $\\mathbf{u} = \\begin{bmatrix}1\\\\0\\end{bmatrix}$ and $\\mathbf{v} = \\begin{bmatrix}0\\\\1\\end{bmatrix}$. The span of $\\mathbf{u}$ and $\\mathbf{v}$ is all of $\\mathbb{R}^2$ because any vector in $\\mathbb{R}^2$ can be expressed as a linear combination of $\\mathbf{u}$ and $\\mathbf{v}$.\n\nFor instance, the vector $\\begin{bmatrix}3\\\\4\\end{bmatrix}$ can be obtained as:\n\n$$\n3\\begin{bmatrix}1\\\\0\\end{bmatrix} + 4\\begin{bmatrix}0\\\\1\\end{bmatrix} = \\begin{bmatrix}3\\\\4\\end{bmatrix}\n$$\n\n# The Matrix Equation, $\\mathbf{A}\\mathbf{x} = \\mathbf{b}$\n\nA fundamental idea in linear algebra is to view a linear combination of vectors as the product of a matrix and a vector. \n\n::: {.callout-note}\n\n# Definition of a Linear Combination\n\nIf $\\mathbf{A}$ is an $m \\times n$ matrix, with columns $\\mathbf{a}_1, ..., \\mathbf{a}_n$, and if $\\mathbf{x}$ is in $\\mathbb{R}^n$, then the product of $\\mathbf{A}$ and $\\mathbf{x}$, denoted by $\\mathbf{A}\\mathbf{x}$, is the linear combination of the columns of $\\mathbf{A}$ using the corresponding entries in $\\mathbf{x}$ as weights; that is,\n\n$$\n\\mathbf{A}x = [\\mathbf{a}_1 \\quad \\mathbf{a}_2 \\quad ... \\quad \\mathbf{a}_n]\n\\begin{bmatrix}\nx_1 \\\\\n\\vdots \\\\\nx_n\n\\end{bmatrix}\n= x_1\\mathbf{a}_1 + x_2\\mathbf{a}_2 + ... + x_n\\mathbf{a}_n\n$$\n\n:::\n\n::: {.callout-note}\n\n# Comparison of the Vector and Matrix Equations\n\nIf $A$ is an $m \\times n$ matrix, with columns $a_1, ..., a_n$, and if $b$ is in $\\mathbb{R}^m$, the matrix equation\n\n$$\n\\mathbf{A}\\mathbf{x} = \\mathbf{b} \n$$\n\nhas the same solution set as the vector equation\n\n$$\nx_1\\mathbf{a}_1 + x_2\\mathbf{a}_2 + ... + x_n\\mathbf{a}_n = \\mathbf{b} \n$$\n\nwhich, in turn, has the same solution set as the system of linear equations whose augmented matrix is\n\n$$\n\\begin{bmatrix}\n\\mathbf{a}_1 & \\mathbf{a}_2 & ... & \\mathbf{a}_n & \\mathbf{b}\n\\end{bmatrix} \n$$\n\n:::\n\nJust like a linear combination of vectors, the product of a matrix and a vector is a linear combination of the columns of the matrix using the corresponding entries in the vector as weights.\n\nIn other words, the matrix equation $\\mathbf{A}\\mathbf{x} = \\mathbf{b}$ can be thought of as a linear combination of the columns of $\\mathbf{A}$ using the corresponding entries in $\\mathbf{x}$ as weights.\n\nThus, the equation, $\\mathbf{A}\\mathbf{x} = \\mathbf{b}$, has a solution if and only if $\\mathbf{b}$ is a linear combination of the columns of $\\mathbf{A}$.\n\n# The Invertible Matrix Theorem in Parts\n\n**Let $A$ be an $(n\\times m)$ matrix where $n\\leq m$**  \n\nIf there are pivots in every column of $A$:\n\n - The columns of A make up a linearly independent set\n\n - The equation, $A\\vec{x}=\\vec{0}$ has only the trivial solution\n\n - The linear transformation $\\vec{x} \\rightarrow A\\vec{x}$ is *one-to-one*, or injective\n\n - The rows of $A$ span $\\mathbb{R}^n$\n\n - There exists an $(n\\times m)$ matrix $C$ such that $CA=I_n$\n\n**Let $A$ be an $(n\\times m)$ matrix where $n\\geq m$**\n\nIf there are pivots in every row of $A$:\n\n - The rows of $A$ make up a linearly independent set\n\n - The equation, $A\\vec{x}=\\vec{b}$ has at least one solution for every $\\vec{b}$ in $\\mathbb{R}^m$\n \n - The linear transformation $\\vec{x} \\rightarrow A\\vec{x}$ maps $\\mathbb{R}^m$ *onto* $\\mathbb{R}^n$, or is surjective\n\n - The columns of $A$ span $\\mathbb{R}^m$\n\n - There exists an $(n\\times m)$ matrix $D$ such that $AD=I_m$\n\n\n**Let $A$ be an $(n\\times n)$ matrix**\n\nIf there are pivots in every row and column of $A$, then both groups of statements above are true, and:\n\n - A is an invertible matrix\n\n - A is row equivalent to $I_n$\n\n - A has $n$ pivot positions\n\n - A's left inverse and right inverse are the same matrix\n\n - The columns of $A$ form a basis of $\\mathbb{R}^n$ \n\n - The column space, $\\text{Col}\\{A\\}$, is $\\mathbb{R}^n$\n\n - The rank of $A = \\text{Rank}\\{A\\} = \\text{dim}\\{\\text{Col}\\{A\\}\\} = n$\n\n - The nullity of $A = \\text{Nullity}\\{A\\} = \\text{dim}\\{\\text{Nul}\\{A\\}\\} = 0$\n\n - 0 is not an eigenvalue of $A$\n\n - The determinant of $A$, $\\det{A} \\neq 0$\n\n::::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n<script type=\"text/javascript\">\nwindow.PlotlyConfig = {MathJaxConfig: 'local'};\nif (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\nif (typeof require !== 'undefined') {\nrequire.undef(\"plotly\");\nrequirejs.config({\n    paths: {\n        'plotly': ['https://cdn.plot.ly/plotly-2.26.0.min']\n    }\n});\nrequire(['plotly'], function(Plotly) {\n    window._Plotly = Plotly;\n});\n}\n</script>\n\n"
      ]
    }
  }
}